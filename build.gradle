group = "com.intraway.technology.jmeter.plugin.snmp"
//archivesBaseName = "iwaySNMPJMeterPlugin"
description = 'Intraway SNMP JMeter Plugin'
version=1.0.0

buildscript {
  repositories { mavenCentral() }
}

task wrapper(type: Wrapper) { gradleVersion = '2.14' }

apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'


repositories {
  mavenLocal()
  mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.jmeterVersion = "2.13"


dependencies {
  compile gradleApi()
  compile localGroovy()
  compile("org.apache.jmeter:ApacheJMeter_core:${jmeterVersion}")
  compile("org.snmp4j:snmp4j:1.10.1")
  testCompile('junit:junit:4.12')
}

configurations {
  //workaround for jmeter defect 57555 (https://bz.apache.org/bugzilla/show_bug.cgi?id=57555)
  if (jmeterVersion == '2.12'){
    compile.exclude group: 'excalibur-fortress', module: 'excalibur-fortress-container-api'
    compile.exclude group: 'excalibur-fortress', module: 'excalibur-fortress-meta'

  }
  //workaround for jmeter defect 57748 (https://bz.apache.org/bugzilla/show_bug.cgi?id=57748)
  if (jmeterVersion == '2.13'){
    compile.exclude group: 'commons-math3', module: 'commons-math3'
    compile.exclude group: 'commons-pool2', module: 'commons-pool2'
  }

}

test{
  maxParallelForks = 1
  systemProperties = [
    SERVER_IP_WITH_SNMP: '172.16.136.6'
  ]
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}
artifacts {
  archives javadocJar, sourcesJar
}

signing {
  sign configurations.archives
}

jar {
  archiveName = "${project.name}.jar"

  def blankOrParam = { param ->
    param ? param : ''
  }

  manifest {
    attributes (
        'Implementation-Title': project.getProperty("description"),
        'Implementation-Version': project.getProperty("version"),
        'Implementation-Vendor': 'Intraway',
        'buildLocalDate': new Date().toString())
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) { from components.java }
  }
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Iway SNMP Jmeter Plugin'
        packaging 'jar'
        // optionally artifactId can be defined here
        description 'A jmeter plugin that handles snmp request!!!'
        url 'https://github.com/devotences/iwaySnmpJmeterPlugin/wiki'

        scm {
          connection 'https://github.com/devotences/iwaySnmpJmeterPlugin.git'
          developerConnection 'https://github.com/devotences/iwaySnmpJmeterPlugin.git'
          url 'https://github.com/devotences/iwaySnmpJmeterPlugin/wiki'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'jbosnjak'
            name 'Juan Pablo Bosnjak'
            email 'juanpablobosnjak@gmail.com'
          }
        }
      }
    }
  }
}



eclipse {
  //if you want parts of paths in resulting file to be replaced by variables (files):
  //pathVariables 'GRADLE_HOME': file('/best/software/gradle'), 'TOMCAT_HOME': file('../tomcat')

  classpath {
    //customizing the classes output directory:
    defaultOutputDir = file('build/classes')

    //default settings for downloading sources and Javadoc:
    downloadSources = true
    downloadJavadoc = true
  }
}